---
# GitLab CI file for a shell runner.
stages:
  - prepare
  - test
  - deploy

python3:
  stage: prepare
  script:
    - 'python3 --version && python3 -m ensurepip'

venv:
  stage: prepare
  variables:
    VIRTUALENV: 'annotation-helper-env/'
    REQUIREMENTS: 'requirements.txt'
    TEST_REQUIREMENTS: 'test/requirements.txt'
  script:
    - 'echo PIP: $(which pip3)'
    - 'source "$HOME/$VIRTUALENV/bin/activate" 2>/dev/null || python3 -m venv "$HOME/$VIRTUALENV" && source "$HOME/$VIRTUALENV/bin/activate"'
    - 'echo PIP: $(which pip3)'
    - '[ ! -r "$REQUIREMENTS" ] || pip3 install -r "$REQUIREMENTS"'
    - '[ ! -r "$TEST_REQUIREMENTS" ] || pip3 install -r "$TEST_REQUIREMENTS"'

pylint:
  stage: test
  variables:
    VIRTUALENV: 'annotation-helper-env/'
    MIN_PYLINT_RATING: '7'
  script:
    - 'source "$HOME/$VIRTUALENV/bin/activate" 2>/dev/null'
    - 'bash test/pylint.sh "$MIN_PYLINT_RATING" || true'

deploy:
  stage: deploy
  variables:
    VIRTUALENV: 'annotation-helper-env/'
    HOST: ''
    PORT: '8000'
    LOGLEVEL: 'DEBUG'
    LOGFILE: 'annotation.log'
    CONFIGFILE: '.aas-server.json'
  script:
    - 'source "$HOME/$VIRTUALENV/bin/activate" 2>/dev/null'
    - 'pkill -f -u gitlab-runner server.py && [ $? -le 1 ] && sleep 3'
    - '[ -r "$HOME/$CONFIGFILE" ] || cp annotation-helper/config.json "$HOME/$CONFIGFILE"'
    - 'python3 annotation-helper/server.py -H "$HOST" -p "$PORT" -l "$HOME/$LOGFILE" --loglevel "$LOGLEVEL" </dev/null 1>/dev/null 2>&1 &'
